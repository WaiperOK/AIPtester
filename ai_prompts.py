# ai_prompts.py

PROMTS = {
    "port_scan": {
        "basic": "Проведи анализ открытых портов {target}. Выяви уязвимые сервисы и предложи векторы атаки.",
        "advanced": "На основе скана портов {scan_data} спрогнозируй возможные 0-day уязвимости. Учти версии ПО и конфигурации."
    },
    "hash_crack": {
        "default": "Проанализируй хэш {hash} и предложи оптимальную стратегию взлома. Учти тип хэширования и сложность.",
        "ai_crack": "Сгенеририруй варианты паролей для хэша {hash} на основе: {user_info}. Используй нейросетевые паттерны."
    },
    "phishing": {
        "gen_template": "Создай фишинг-шаблон для {target_service} который обойдет основные антифишинговые системы. Включи: HTML, JS обфускацию, редиректы.",
        "detect": "Проанализируй страницу {url} на признаки фишинга. Дай оценку от 0 до 100% с объяснением."
    },
    "exploit_gen": {
        "binary": "На основе бинарника {file_path} сгенерируй рабочий эксплойт для {vuln_type}. Код на Python/C с комментариями.",
        "web": "Создай эксплойт для уязвимости {vuln_type} на {target_url}. Учти WAF {waf_type}."
    },
    "wifi_audit": {
        "scan": "Проанализируй WiFi сети {scan_results}. Предложи методы взлома для каждой с оценкой сложности.",
        "attack": "Сгенерируй команды для атаки на сеть {bssid} с использованием {tool}. Учти шифрование {encryption}."
    },
    "sqli": {
        "detect": "Найди SQLi уязвимости в HTTP-запросах {requests}. Предложи payloads для проверки.",
        "exploit": "Создай SQLmap-like команду для эксплуатации {vuln_url} с обходом {waf}."
    },
    "osint": {
        "person": "Собери OSINT по {target_name}. Проверь: соцсети, утечки, связанные аккаунты. Формат: JSON.",
        "domain": "Проведи разведку по домену {domain}. Выяви субдомены, IP, историю, уязвимые сервисы."
    },
    "stego": {
        "detect": "Проанализируй файл {file_path} на наличие стеганографии. Предложи методы извлечения данных.",
        "hide": "Создай инструкцию по скрытию данных в {file_type} с использованием {tool}."
    },
    "api_security": {
        "fuzz": "Сгенерируй fuzzing-запросы для API эндпоинта {endpoint} с фокусом на {vuln_types}.",
        "scan": "Проведи аудит безопасности API по спецификации {swagger_url}. Выяви уязвимости."
    },
    "report_gen": {
        "vuln": "Создай профессиональный отчет об уязвимости {vuln_data} для тех. и рук. персонала.",
        "pentest": "Сгенерируй итоговый отчет пентеста на основе данных: {scan_results}."
    }
}